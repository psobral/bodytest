<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.0 (Python 3.9.1 on win32)" generated="20210424 22:09:27.454" rpa="false" schemaversion="2">
<suite id="s1" name="Update" source="C:\RobotXpert\bodytest\tests\plans\update.robot">
<kw name="Start Admin Session" library="base" type="SETUP">
<kw name="Start Browser Session" library="base">
<kw name="New Browser" library="Browser">
<arg>chromium</arg>
<arg>false</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<msg timestamp="20210424 22:09:28.282" level="INFO">{"browser": "chromium", "headless": false, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 0.0}</msg>
<msg timestamp="20210424 22:09:28.746" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":0}</msg>
<status status="PASS" starttime="20210424 22:09:28.282" endtime="20210424 22:09:28.746"/>
</kw>
<kw name="New Page" library="Browser">
<arg>about:blank</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20210424 22:09:29.275" level="INFO">Successfully initialized new page object and opened url: about:blank</msg>
<status status="PASS" starttime="20210424 22:09:28.746" endtime="20210424 22:09:29.276"/>
</kw>
<status status="PASS" starttime="20210424 22:09:28.282" endtime="20210424 22:09:29.276"/>
</kw>
<kw name="Go To Login Page" library="auth">
<kw name="Go To" library="Browser">
<arg>https://bodytest-web-paula.herokuapp.com/</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Navigates to the given ``url``.</doc>
<msg timestamp="20210424 22:09:32.637" level="INFO">Succesfully opened URL https://bodytest-web-paula.herokuapp.com/</msg>
<status status="PASS" starttime="20210424 22:09:29.276" endtime="20210424 22:09:32.638"/>
</kw>
<status status="PASS" starttime="20210424 22:09:29.276" endtime="20210424 22:09:32.638"/>
</kw>
<kw name="Login With" library="auth">
<arg>admin@bodytest.com</arg>
<arg>pwd123</arg>
<kw name="Fill Text" library="Browser">
<arg>css=input[name=email]</arg>
<arg>${email}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210424 22:09:32.639" level="INFO">Fills the text 'admin@bodytest.com' in the given field.</msg>
<status status="PASS" starttime="20210424 22:09:32.638" endtime="20210424 22:09:32.683"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>css=input[placeholder*=senha]</arg>
<arg>${pass}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210424 22:09:32.684" level="INFO">Fills the text 'pwd123' in the given field.</msg>
<status status="PASS" starttime="20210424 22:09:32.683" endtime="20210424 22:09:32.713"/>
</kw>
<kw name="Click" library="Browser">
<arg>text=Entrar</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210424 22:09:32.713" endtime="20210424 22:09:32.781"/>
</kw>
<status status="PASS" starttime="20210424 22:09:32.638" endtime="20210424 22:09:32.782"/>
</kw>
<kw name="User Should Be Logged In" library="nav">
<arg>Administrador</arg>
<kw name="Get Text" library="Browser">
<arg>css=aside strong</arg>
<arg>should be</arg>
<arg>${user_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<status status="PASS" starttime="20210424 22:09:32.782" endtime="20210424 22:09:33.659"/>
</kw>
<status status="PASS" starttime="20210424 22:09:32.782" endtime="20210424 22:09:33.659"/>
</kw>
<status status="PASS" starttime="20210424 22:09:28.282" endtime="20210424 22:09:33.659"/>
</kw>
<test id="s1-t1" name="Cenário: Atualizar um plano já cadastrado">
<kw name="Get JSON" library="base">
<var>${fixture}</var>
<arg>plans.update.json</arg>
<kw name="Get File" library="OperatingSystem">
<var>${file}</var>
<arg>${EXECDIR}/resources/fixtures/${file_name}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210424 22:09:33.666" level="INFO" html="true">Getting file '&lt;a href="file://C:\RobotXpert\bodytest\resources\fixtures\plans.update.json"&gt;C:\RobotXpert\bodytest\resources\fixtures\plans.update.json&lt;/a&gt;'.</msg>
<msg timestamp="20210424 22:09:33.666" level="INFO">${file} = {
    "before": {
        "title": "Plano Completo",
        "duration": 12,
        "price": 89.99
    },
    "after": {
        "title": "Plano Individual",
        "duration": 3,
        "price": 5...</msg>
<status status="PASS" starttime="20210424 22:09:33.665" endtime="20210424 22:09:33.666"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${json_object}</var>
<arg>json.loads($file)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210424 22:09:33.671" level="INFO">${json_object} = {'before': {'title': 'Plano Completo', 'duration': 12, 'price': 89.99}, 'after': {'title': 'Plano Individual', 'duration': 3, 'price': 59.99}}</msg>
<status status="PASS" starttime="20210424 22:09:33.666" endtime="20210424 22:09:33.671"/>
</kw>
<msg timestamp="20210424 22:09:33.671" level="INFO">${fixture} = {'before': {'title': 'Plano Completo', 'duration': 12, 'price': 89.99}, 'after': {'title': 'Plano Individual', 'duration': 3, 'price': 59.99}}</msg>
<status status="PASS" starttime="20210424 22:09:33.665" endtime="20210424 22:09:33.671"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${completo}</var>
<arg>${fixture['before']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210424 22:09:33.674" level="INFO">${completo} = {'title': 'Plano Completo', 'duration': 12, 'price': 89.99}</msg>
<status status="PASS" starttime="20210424 22:09:33.673" endtime="20210424 22:09:33.674"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${individual}</var>
<arg>${fixture['after']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210424 22:09:33.676" level="INFO">${individual} = {'title': 'Plano Individual', 'duration': 3, 'price': 59.99}</msg>
<status status="PASS" starttime="20210424 22:09:33.675" endtime="20210424 22:09:33.676"/>
</kw>
<kw name="Remove Plan" library="DeloreanLibrary">
<arg>${completo['title']}</arg>
<msg timestamp="20210424 22:09:33.677" level="INFO">delete from plans where title = 'Plano Completo'</msg>
<status status="PASS" starttime="20210424 22:09:33.677" endtime="20210424 22:09:34.901"/>
</kw>
<kw name="Remove Plan" library="DeloreanLibrary">
<arg>${individual['title']}</arg>
<msg timestamp="20210424 22:09:34.916" level="INFO">delete from plans where title = 'Plano Individual'</msg>
<status status="PASS" starttime="20210424 22:09:34.901" endtime="20210424 22:09:36.136"/>
</kw>
<kw name="Insert Plan" library="DeloreanLibrary">
<arg>${completo}</arg>
<msg timestamp="20210424 22:09:36.136" level="INFO">delete from plans where title = 'Plano Completo'</msg>
<msg timestamp="20210424 22:09:37.277" level="INFO">insert into plans (title, duration, price, created_at, updated_at)values('Plano Completo','12',89.99, NOW(), NOW());</msg>
<status status="PASS" starttime="20210424 22:09:36.136" endtime="20210424 22:09:38.496"/>
</kw>
<kw name="Go To Plans" library="nav">
<kw name="Click" library="Browser">
<arg>css=a[href$=planos]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210424 22:09:38.496" endtime="20210424 22:09:38.550"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>css=h1 &gt;&gt; text=Gestão de Planos</arg>
<arg>visible</arg>
<arg>5</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210424 22:09:38.568" level="INFO">Wait for Element with selector: css=h1 &gt;&gt; text=Gestão de Planos</msg>
<status status="PASS" starttime="20210424 22:09:38.550" endtime="20210424 22:09:38.568"/>
</kw>
<status status="PASS" starttime="20210424 22:09:38.496" endtime="20210424 22:09:38.568"/>
</kw>
<kw name="Search Plan By Title" library="plans">
<arg>${completo['title']}</arg>
<kw name="Fill Text" library="Browser">
<arg>css=input[placeholder="Buscar plano"]</arg>
<arg>${title}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210424 22:09:38.570" level="INFO">Fills the text 'Plano Completo' in the given field.</msg>
<status status="PASS" starttime="20210424 22:09:38.570" endtime="20210424 22:09:38.583"/>
</kw>
<status status="PASS" starttime="20210424 22:09:38.569" endtime="20210424 22:09:38.583"/>
</kw>
<kw name="Go To Plan Update Form" library="plans">
<arg>${completo['title']}</arg>
<kw name="Click" library="Browser">
<arg>xpath=//td[contains(text(), "${title}")]/..//a[@class="edit"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210424 22:09:38.583" endtime="20210424 22:09:39.503"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>css=h1 &gt;&gt; text=Edição de plano</arg>
<arg>visible</arg>
<arg>5</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210424 22:09:39.513" level="INFO">Wait for Element with selector: css=h1 &gt;&gt; text=Edição de plano</msg>
<status status="PASS" starttime="20210424 22:09:39.503" endtime="20210424 22:09:39.513"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210424 22:09:40.517" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20210424 22:09:39.513" endtime="20210424 22:09:40.517"/>
</kw>
<status status="PASS" starttime="20210424 22:09:38.583" endtime="20210424 22:09:40.517"/>
</kw>
<kw name="Update A Plan" library="plans">
<arg>${individual}</arg>
<kw name="Fill Text" library="Browser">
<arg>${TITLE_FIELD}</arg>
<arg>${plan['title']}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210424 22:09:40.517" level="INFO">Fills the text 'Plano Individual' in the given field.</msg>
<status status="PASS" starttime="20210424 22:09:40.517" endtime="20210424 22:09:40.531"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${DURATION_FIELD}</arg>
<arg>${plan['duration']}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210424 22:09:40.531" level="INFO">Fills the text '3' in the given field.</msg>
<status status="PASS" starttime="20210424 22:09:40.531" endtime="20210424 22:09:40.564"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${PRICE_FIELD}</arg>
<arg>${plan['price']}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210424 22:09:40.565" level="INFO">Fills the text '59.99' in the given field.</msg>
<status status="PASS" starttime="20210424 22:09:40.564" endtime="20210424 22:09:40.597"/>
</kw>
<kw name="Submit Plan Form" library="plans">
<kw name="Click" library="Browser">
<arg>xpath=//button[contains(text(), "Salvar")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210424 22:09:40.598" endtime="20210424 22:09:40.645"/>
</kw>
<status status="PASS" starttime="20210424 22:09:40.597" endtime="20210424 22:09:40.646"/>
</kw>
<status status="PASS" starttime="20210424 22:09:40.517" endtime="20210424 22:09:40.646"/>
</kw>
<kw name="Toaster Text Should Be" library="components">
<arg>Plano Atualizado com sucesso</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>css=.Toastify__toast-body &gt;&gt; text=${expect_text}</arg>
<arg>visible</arg>
<arg>5</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210424 22:09:41.040" level="INFO">Wait for Element with selector: css=.Toastify__toast-body &gt;&gt; text=Plano Atualizado com sucesso</msg>
<status status="PASS" starttime="20210424 22:09:40.647" endtime="20210424 22:09:41.041"/>
</kw>
<status status="PASS" starttime="20210424 22:09:40.646" endtime="20210424 22:09:41.041"/>
</kw>
<kw name="Thinking And Take Screenshot" library="base" type="TEARDOWN">
<arg>2</arg>
<kw name="Sleep" library="BuiltIn">
<arg>${timeout}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210424 22:09:43.046" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210424 22:09:41.042" endtime="20210424 22:09:43.046"/>
</kw>
<kw name="Take Screenshot" library="Browser">
<tag>PageContent</tag>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210424 22:09:43.428" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-352.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-352.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210424 22:09:43.046" endtime="20210424 22:09:43.428"/>
</kw>
<status status="PASS" starttime="20210424 22:09:41.042" endtime="20210424 22:09:43.428"/>
</kw>
<status status="PASS" starttime="20210424 22:09:33.659" endtime="20210424 22:09:43.429"/>
</test>
<doc>Suite Atualizar planos</doc>
<status status="PASS" starttime="20210424 22:09:27.454" endtime="20210424 22:09:43.442"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Update">Update</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
