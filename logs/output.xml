<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.0 (Python 3.9.1 on win32)" generated="20210503 16:33:09.075" rpa="false" schemaversion="2">
<suite id="s1" name="Create" source="C:\RobotXpert\bodytest\tests\enrollments\create.robot">
<kw name="Start Admin Session" library="base" type="SETUP">
<kw name="Start Browser Session" library="base">
<kw name="New Browser" library="Browser">
<arg>chromium</arg>
<arg>false</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<msg timestamp="20210503 16:33:09.960" level="INFO">{"browser": "chromium", "headless": false, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 0.0}</msg>
<msg timestamp="20210503 16:33:10.476" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":0}</msg>
<status status="PASS" starttime="20210503 16:33:09.958" endtime="20210503 16:33:10.478"/>
</kw>
<kw name="New Page" library="Browser">
<arg>about:blank</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20210503 16:33:10.782" level="INFO">Successfully initialized new page object and opened url: about:blank</msg>
<status status="PASS" starttime="20210503 16:33:10.478" endtime="20210503 16:33:10.783"/>
</kw>
<status status="PASS" starttime="20210503 16:33:09.957" endtime="20210503 16:33:10.783"/>
</kw>
<kw name="Go To Login Page" library="auth">
<kw name="Go To" library="Browser">
<arg>https://bodytest-web-paula.herokuapp.com/</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Navigates to the given ``url``.</doc>
<msg timestamp="20210503 16:33:14.497" level="INFO">Succesfully opened URL https://bodytest-web-paula.herokuapp.com/</msg>
<status status="PASS" starttime="20210503 16:33:10.784" endtime="20210503 16:33:14.500"/>
</kw>
<status status="PASS" starttime="20210503 16:33:10.783" endtime="20210503 16:33:14.501"/>
</kw>
<kw name="Login With" library="auth">
<arg>admin@bodytest.com</arg>
<arg>pwd123</arg>
<kw name="Fill Text" library="Browser">
<arg>css=input[name=email]</arg>
<arg>${email}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210503 16:33:14.504" level="INFO">Fills the text 'admin@bodytest.com' in the given field.</msg>
<status status="PASS" starttime="20210503 16:33:14.503" endtime="20210503 16:33:14.598"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>css=input[placeholder*=senha]</arg>
<arg>${pass}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210503 16:33:14.599" level="INFO">Fills the text 'pwd123' in the given field.</msg>
<status status="PASS" starttime="20210503 16:33:14.599" endtime="20210503 16:33:14.638"/>
</kw>
<kw name="Click" library="Browser">
<arg>text=Entrar</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210503 16:33:14.638" endtime="20210503 16:33:14.699"/>
</kw>
<status status="PASS" starttime="20210503 16:33:14.501" endtime="20210503 16:33:14.699"/>
</kw>
<kw name="User Should Be Logged In" library="nav">
<arg>Administrador</arg>
<kw name="Get Text" library="Browser">
<arg>css=aside strong</arg>
<arg>should be</arg>
<arg>${user_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<status status="PASS" starttime="20210503 16:33:14.700" endtime="20210503 16:33:15.866"/>
</kw>
<status status="PASS" starttime="20210503 16:33:14.699" endtime="20210503 16:33:15.867"/>
</kw>
<status status="PASS" starttime="20210503 16:33:09.957" endtime="20210503 16:33:15.867"/>
</kw>
<test id="s1-t1" name="Cenário: Deve exibir data inicial e final conforme o plano escolhido">
<kw name="Get JSON" library="base">
<var>${fixture}</var>
<arg>enroll-dates.json</arg>
<kw name="Get File" library="OperatingSystem">
<var>${file}</var>
<arg>${EXECDIR}/resources/fixtures/${file_name}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210503 16:33:15.875" level="INFO" html="true">Getting file '&lt;a href="file://C:\RobotXpert\bodytest\resources\fixtures\enroll-dates.json"&gt;C:\RobotXpert\bodytest\resources\fixtures\enroll-dates.json&lt;/a&gt;'.</msg>
<msg timestamp="20210503 16:33:15.875" level="INFO">${file} = {
    "student": {
            "name": "John Connor",
            "email": "john@skynet.com",
            "age": 16,
            "weight": 65,
            "feet_tall": 1.65
    },
    "plan": {
      ...</msg>
<status status="PASS" starttime="20210503 16:33:15.874" endtime="20210503 16:33:15.875"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${json_object}</var>
<arg>json.loads($file)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210503 16:33:15.877" level="INFO">${json_object} = {'student': {'name': 'John Connor', 'email': 'john@skynet.com', 'age': 16, 'weight': 65, 'feet_tall': 1.65}, 'plan': {'title': 'Plano Completo', 'duration': 12, 'price': 19.99}, 'days': 365}</msg>
<status status="PASS" starttime="20210503 16:33:15.875" endtime="20210503 16:33:15.877"/>
</kw>
<msg timestamp="20210503 16:33:15.877" level="INFO">${fixture} = {'student': {'name': 'John Connor', 'email': 'john@skynet.com', 'age': 16, 'weight': 65, 'feet_tall': 1.65}, 'plan': {'title': 'Plano Completo', 'duration': 12, 'price': 19.99}, 'days': 365}</msg>
<status status="PASS" starttime="20210503 16:33:15.874" endtime="20210503 16:33:15.880"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${john}</var>
<arg>${fixture['student']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210503 16:33:15.881" level="INFO">${john} = {'name': 'John Connor', 'email': 'john@skynet.com', 'age': 16, 'weight': 65, 'feet_tall': 1.65}</msg>
<status status="PASS" starttime="20210503 16:33:15.880" endtime="20210503 16:33:15.881"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${black}</var>
<arg>${fixture['plan']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210503 16:33:15.882" level="INFO">${black} = {'title': 'Plano Completo', 'duration': 12, 'price': 19.99}</msg>
<status status="PASS" starttime="20210503 16:33:15.881" endtime="20210503 16:33:15.882"/>
</kw>
<kw name="Insert Student" library="DeloreanLibrary">
<arg>${john}</arg>
<msg timestamp="20210503 16:33:15.882" level="INFO">delete from students where email = 'john@skynet.com'</msg>
<msg timestamp="20210503 16:33:17.025" level="INFO">insert into students (name, email, age, weight, feet_tall, created_at, updated_at)values('John Connor','john@skynet.com',16,65,1.65, NOW(), NOW());</msg>
<status status="PASS" starttime="20210503 16:33:15.882" endtime="20210503 16:33:18.178"/>
</kw>
<kw name="Insert Plan" library="DeloreanLibrary">
<arg>${black}</arg>
<msg timestamp="20210503 16:33:18.178" level="INFO">delete from plans where title LIKE '%Plano Completo%'</msg>
<msg timestamp="20210503 16:33:19.344" level="INFO">insert into plans (title, duration, price, created_at, updated_at)values('Plano Completo','12',19.99, NOW(), NOW());</msg>
<status status="PASS" starttime="20210503 16:33:18.178" endtime="20210503 16:33:20.483"/>
</kw>
<kw name="Go To Enrolls" library="nav">
<kw name="Click" library="Browser">
<arg>css=a[href$=matriculas]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210503 16:33:20.491" endtime="20210503 16:33:20.573"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>css=h1 &gt;&gt; text=Gestão de Matrículas</arg>
<arg>visible</arg>
<arg>5</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210503 16:33:20.589" level="INFO">Wait for Element with selector: css=h1 &gt;&gt; text=Gestão de Matrículas</msg>
<status status="PASS" starttime="20210503 16:33:20.574" endtime="20210503 16:33:20.590"/>
</kw>
<status status="PASS" starttime="20210503 16:33:20.483" endtime="20210503 16:33:20.590"/>
</kw>
<kw name="Go To Form Enrolls" library="enrolls">
<kw name="Click" library="Browser">
<arg>css=a[href$="matriculas/new"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210503 16:33:20.591" endtime="20210503 16:33:20.723"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>css=h1 &gt;&gt; text=Nova matrícula</arg>
<arg>visible</arg>
<arg>5</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210503 16:33:20.736" level="INFO">Wait for Element with selector: css=h1 &gt;&gt; text=Nova matrícula</msg>
<status status="PASS" starttime="20210503 16:33:20.723" endtime="20210503 16:33:20.736"/>
</kw>
<status status="PASS" starttime="20210503 16:33:20.590" endtime="20210503 16:33:20.736"/>
</kw>
<kw name="Select Students" library="enrolls">
<arg>${john['name']}</arg>
<kw name="Fill Text" library="Browser">
<arg>css=input[aria-label=student_id]</arg>
<arg>${name}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210503 16:33:20.738" level="INFO">Fills the text 'John Connor' in the given field.</msg>
<status status="PASS" starttime="20210503 16:33:20.738" endtime="20210503 16:33:20.779"/>
</kw>
<kw name="Click" library="Browser">
<arg>css=div[id*=option] &gt;&gt; text=${name}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210503 16:33:20.779" endtime="20210503 16:33:21.346"/>
</kw>
<status status="PASS" starttime="20210503 16:33:20.737" endtime="20210503 16:33:21.347"/>
</kw>
<kw name="Select Plan" library="enrolls">
<arg>${black['title']}</arg>
<kw name="Fill Text" library="Browser">
<arg>css=input[aria-label=plan_id]</arg>
<arg>${title}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210503 16:33:21.349" level="INFO">Fills the text 'Plano Completo' in the given field.</msg>
<status status="PASS" starttime="20210503 16:33:21.349" endtime="20210503 16:33:21.383"/>
</kw>
<kw name="Click" library="Browser">
<arg>css=div[id*=option] &gt;&gt; text=${title}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210503 16:33:21.383" endtime="20210503 16:33:21.469"/>
</kw>
<status status="PASS" starttime="20210503 16:33:21.348" endtime="20210503 16:33:21.470"/>
</kw>
<kw name="Start Data Should Today" library="enrolls">
<kw name="Get Current Date" library="DateTime">
<var>${start_date}</var>
<arg>result_format=%d/%m/%Y</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20210503 16:33:21.471" level="INFO">${start_date} = 03/05/2021</msg>
<status status="PASS" starttime="20210503 16:33:21.471" endtime="20210503 16:33:21.471"/>
</kw>
<kw name="Get Attribute" library="Browser">
<arg>css=input[name=start_date]</arg>
<arg>value</arg>
<arg>equal</arg>
<arg>${start_date}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the HTML ``attribute`` of the element found by ``selector``.</doc>
<status status="PASS" starttime="20210503 16:33:21.471" endtime="20210503 16:33:21.508"/>
</kw>
<status status="PASS" starttime="20210503 16:33:21.470" endtime="20210503 16:33:21.509"/>
</kw>
<kw name="End Date Should Be" library="enrolls">
<arg>${fixture['days']}</arg>
<kw name="Get Current Date" library="DateTime">
<var>${current_date}</var>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20210503 16:33:21.510" level="INFO">${current_date} = 2021-05-03 16:33:21.510</msg>
<status status="PASS" starttime="20210503 16:33:21.510" endtime="20210503 16:33:21.510"/>
</kw>
<kw name="Add Time To Date" library="DateTime">
<var>${end_date}</var>
<arg>${current_date}</arg>
<arg>${days} days</arg>
<arg>result_format=%d/%m/%Y</arg>
<doc>Adds time to date and returns the resulting date.</doc>
<msg timestamp="20210503 16:33:21.510" level="INFO">${end_date} = 03/05/2022</msg>
<status status="PASS" starttime="20210503 16:33:21.510" endtime="20210503 16:33:21.510"/>
</kw>
<kw name="Get Attribute" library="Browser">
<arg>css=input[name=end_date]</arg>
<arg>value</arg>
<arg>equal</arg>
<arg>${end_date}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the HTML ``attribute`` of the element found by ``selector``.</doc>
<status status="PASS" starttime="20210503 16:33:21.519" endtime="20210503 16:33:21.558"/>
</kw>
<status status="PASS" starttime="20210503 16:33:21.509" endtime="20210503 16:33:21.559"/>
</kw>
<kw name="Take Screenshot" library="Browser" type="TEARDOWN">
<tag>PageContent</tag>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210503 16:33:21.998" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-415.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-415.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210503 16:33:21.560" endtime="20210503 16:33:21.998"/>
</kw>
<status status="PASS" starttime="20210503 16:33:15.867" endtime="20210503 16:33:21.999"/>
</test>
<test id="s1-t2" name="Cenário 2: Deve matricular um aluno em um plano">
<kw name="Get JSON" library="base">
<var>${fixture}</var>
<arg>enroll-create.json</arg>
<kw name="Get File" library="OperatingSystem">
<var>${file}</var>
<arg>${EXECDIR}/resources/fixtures/${file_name}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210503 16:33:22.016" level="INFO" html="true">Getting file '&lt;a href="file://C:\RobotXpert\bodytest\resources\fixtures\enroll-create.json"&gt;C:\RobotXpert\bodytest\resources\fixtures\enroll-create.json&lt;/a&gt;'.</msg>
<msg timestamp="20210503 16:33:22.016" level="INFO">${file} = {
    "student": {
            "name": "Sara Connor",
            "email": "sara@skynet.com",
            "age": 25,
            "weight": 60,
            "feet_tall": 1.65
    },
    "plan": {
      ...</msg>
<status status="PASS" starttime="20210503 16:33:22.015" endtime="20210503 16:33:22.016"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${json_object}</var>
<arg>json.loads($file)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210503 16:33:22.016" level="INFO">${json_object} = {'student': {'name': 'Sara Connor', 'email': 'sara@skynet.com', 'age': 25, 'weight': 60, 'feet_tall': 1.65}, 'plan': {'title': 'Plano Fit', 'duration': 6, 'price': 29.99}, 'days': 182}</msg>
<status status="PASS" starttime="20210503 16:33:22.016" endtime="20210503 16:33:22.016"/>
</kw>
<msg timestamp="20210503 16:33:22.016" level="INFO">${fixture} = {'student': {'name': 'Sara Connor', 'email': 'sara@skynet.com', 'age': 25, 'weight': 60, 'feet_tall': 1.65}, 'plan': {'title': 'Plano Fit', 'duration': 6, 'price': 29.99}, 'days': 182}</msg>
<status status="PASS" starttime="20210503 16:33:22.015" endtime="20210503 16:33:22.016"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${sara}</var>
<arg>${fixture['student']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210503 16:33:22.016" level="INFO">${sara} = {'name': 'Sara Connor', 'email': 'sara@skynet.com', 'age': 25, 'weight': 60, 'feet_tall': 1.65}</msg>
<status status="PASS" starttime="20210503 16:33:22.016" endtime="20210503 16:33:22.016"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${fit}</var>
<arg>${fixture['plan']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210503 16:33:22.024" level="INFO">${fit} = {'title': 'Plano Fit', 'duration': 6, 'price': 29.99}</msg>
<status status="PASS" starttime="20210503 16:33:22.016" endtime="20210503 16:33:22.024"/>
</kw>
<kw name="Insert Student" library="DeloreanLibrary">
<arg>${sara}</arg>
<msg timestamp="20210503 16:33:22.025" level="INFO">delete from students where email = 'sara@skynet.com'</msg>
<msg timestamp="20210503 16:33:23.176" level="INFO">insert into students (name, email, age, weight, feet_tall, created_at, updated_at)values('Sara Connor','sara@skynet.com',25,60,1.65, NOW(), NOW());</msg>
<status status="PASS" starttime="20210503 16:33:22.025" endtime="20210503 16:33:24.303"/>
</kw>
<kw name="Insert Plan" library="DeloreanLibrary">
<arg>${fit}</arg>
<msg timestamp="20210503 16:33:24.304" level="INFO">delete from plans where title LIKE '%Plano Fit%'</msg>
<msg timestamp="20210503 16:33:25.477" level="INFO">insert into plans (title, duration, price, created_at, updated_at)values('Plano Fit','6',29.99, NOW(), NOW());</msg>
<status status="PASS" starttime="20210503 16:33:24.304" endtime="20210503 16:33:26.634"/>
</kw>
<kw name="Go To Enrolls" library="nav">
<kw name="Click" library="Browser">
<arg>css=a[href$=matriculas]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210503 16:33:26.634" endtime="20210503 16:33:26.737"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>css=h1 &gt;&gt; text=Gestão de Matrículas</arg>
<arg>visible</arg>
<arg>5</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210503 16:33:26.759" level="INFO">Wait for Element with selector: css=h1 &gt;&gt; text=Gestão de Matrículas</msg>
<status status="PASS" starttime="20210503 16:33:26.738" endtime="20210503 16:33:26.760"/>
</kw>
<status status="PASS" starttime="20210503 16:33:26.634" endtime="20210503 16:33:26.760"/>
</kw>
<kw name="Go To Form Enrolls" library="enrolls">
<kw name="Click" library="Browser">
<arg>css=a[href$="matriculas/new"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210503 16:33:26.761" endtime="20210503 16:33:26.877"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>css=h1 &gt;&gt; text=Nova matrícula</arg>
<arg>visible</arg>
<arg>5</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210503 16:33:26.893" level="INFO">Wait for Element with selector: css=h1 &gt;&gt; text=Nova matrícula</msg>
<status status="PASS" starttime="20210503 16:33:26.878" endtime="20210503 16:33:26.894"/>
</kw>
<status status="PASS" starttime="20210503 16:33:26.761" endtime="20210503 16:33:26.894"/>
</kw>
<kw name="Select Students" library="enrolls">
<arg>${sara['name']}</arg>
<kw name="Fill Text" library="Browser">
<arg>css=input[aria-label=student_id]</arg>
<arg>${name}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210503 16:33:26.895" level="INFO">Fills the text 'Sara Connor' in the given field.</msg>
<status status="PASS" starttime="20210503 16:33:26.895" endtime="20210503 16:33:26.930"/>
</kw>
<kw name="Click" library="Browser">
<arg>css=div[id*=option] &gt;&gt; text=${name}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210503 16:33:26.930" endtime="20210503 16:33:27.333"/>
</kw>
<status status="PASS" starttime="20210503 16:33:26.895" endtime="20210503 16:33:27.333"/>
</kw>
<kw name="Select Plan" library="enrolls">
<arg>${fit['title']}</arg>
<kw name="Fill Text" library="Browser">
<arg>css=input[aria-label=plan_id]</arg>
<arg>${title}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210503 16:33:27.336" level="INFO">Fills the text 'Plano Fit' in the given field.</msg>
<status status="PASS" starttime="20210503 16:33:27.335" endtime="20210503 16:33:27.381"/>
</kw>
<kw name="Click" library="Browser">
<arg>css=div[id*=option] &gt;&gt; text=${title}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210503 16:33:27.381" endtime="20210503 16:33:27.457"/>
</kw>
<status status="PASS" starttime="20210503 16:33:27.334" endtime="20210503 16:33:27.458"/>
</kw>
<kw name="Submit Enrolls Form" library="enrolls">
<kw name="Click" library="Browser">
<arg>css=button[form=formEnrollment]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210503 16:33:27.460" endtime="20210503 16:33:27.534"/>
</kw>
<status status="PASS" starttime="20210503 16:33:27.459" endtime="20210503 16:33:27.534"/>
</kw>
<kw name="Toaster Text Should Be" library="components">
<arg>Matrícula cadastrada com sucesso</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>css=.Toastify__toast-body &gt;&gt; text=${expect_text}</arg>
<arg>visible</arg>
<arg>5</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210503 16:33:27.949" level="INFO">Wait for Element with selector: css=.Toastify__toast-body &gt;&gt; text=Matrícula cadastrada com sucesso</msg>
<status status="PASS" starttime="20210503 16:33:27.535" endtime="20210503 16:33:27.950"/>
</kw>
<status status="PASS" starttime="20210503 16:33:27.534" endtime="20210503 16:33:27.950"/>
</kw>
<kw name="Thinking And Take Screenshot" library="base" type="TEARDOWN">
<arg>5</arg>
<kw name="Sleep" library="BuiltIn">
<arg>${timeout}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210503 16:33:32.969" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210503 16:33:27.952" endtime="20210503 16:33:32.969"/>
</kw>
<kw name="Take Screenshot" library="Browser">
<tag>PageContent</tag>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210503 16:33:33.489" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-416.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-416.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210503 16:33:32.970" endtime="20210503 16:33:33.490"/>
</kw>
<status status="PASS" starttime="20210503 16:33:27.951" endtime="20210503 16:33:33.490"/>
</kw>
<status status="PASS" starttime="20210503 16:33:22.008" endtime="20210503 16:33:33.491"/>
</test>
<doc>Suite Gestão de Matriculas</doc>
<status status="PASS" starttime="20210503 16:33:09.077" endtime="20210503 16:33:33.502"/>
</suite>
<statistics>
<total>
<stat pass="2" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="2" fail="0" skip="0" id="s1" name="Create">Create</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
